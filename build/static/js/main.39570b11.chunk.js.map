{"version":3,"sources":["services/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Header","type","text","Notification","notificationMessage","message","notificationStyle","color","error","background","fontSize","borderStyle","borderRadius","padding","marginBottom","display","style","InputForm","label","name","value","onChange","Number","person","removePerson","number","onClick","Filter","filter","handleFilterChange","PersonForm","onSubmit","Persons","persons","nameFilter","toLowerCase","includes","map","key","App","useState","setPersons","newPerson","setNewPerson","setFilter","setNotificationMessage","useEffect","personService","initialPersons","createNotification","setTimeout","event","target","preventDefault","length","returnedPerson","window","confirm","concat","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39570b11.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => (\n    axios.get(baseUrl).then(response => response.data)\n)\n\nconst create = newObject => (\n    axios.post(baseUrl, newObject).then(response => response.data)\n)\n\nconst update = (id, newObject) => (\n    axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n)\n\nconst remove = (id) => (\n    axios.delete(`${baseUrl}/${id}`)\n)\n\nexport default {\n    getAll, create, update, remove\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/Persons'\n\nconst Header = ({ type, text }) => (\n  type > 2 ? <h3>{text}</h3> : <h2>{text}</h2>\n)\n\nconst Notification = ({ notificationMessage }) => {\n  const { message, error } = notificationMessage\n\n  const notificationStyle = {\n    color: (error ? 'red' : 'green'),\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px',\n  }\n\n  if (!message) {\n    notificationStyle.display = 'none'\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst InputForm = ({ label, name, value, onChange }) => (\n  <div>{label} <input type='text' name={name} value={value} onChange={onChange}></input></div>\n)\n\nconst Number = ({ person, removePerson }) => {\n  const { name, number } = person\n  return (\n    <div>\n      {name} {number}\n      <button onClick={removePerson}>delete</button>\n    </div>\n  )\n}\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <InputForm label='filter shown with' name='filter' value={filter} onChange={handleFilterChange} />\n)\n\nconst PersonForm = ({ onSubmit, value, onChange }) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      <InputForm label='name:' name='name' value={value.name} onChange={onChange} />\n      <InputForm label='number:' name='number' value={value.number} onChange={onChange} />\n    </div>\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({ persons, nameFilter, removePerson }) => (\n  <div>\n    {persons.filter(person =>\n      person.name.toLowerCase().includes(nameFilter.toLowerCase())).map((person) =>\n        (<Number key={person.name} person={person} removePerson={() => removePerson(person.id)} />))}\n  </div>\n)\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' })\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState([])\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const handleInputChange = (event) => setNewPerson({ ...newPerson, [event.target.name]: event.target.value })\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const isNewName = (name) => persons.filter(person => person.name === name).length === 0\n\n\n  const createNotification = message => {\n    setNotificationMessage(message)\n    setTimeout(() => setNotificationMessage([]), 2000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (newPerson.name.length === 0)\n      createNotification({ message: `Name cannot be empty.`, error: true })\n    else if (isNewName(newPerson.name)) {\n      personService.create(newPerson).then(returnedPerson => {\n        setPersons([...persons, returnedPerson])\n        createNotification({ message: `Added ${newPerson.name}.`, error: false })\n      })\n    }\n    else {\n      if (window.confirm(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`))\n        personService.update(persons.filter(person => person.name === newPerson.name)[0].id, newPerson).then(returnedPerson => {\n          setPersons(persons.filter(person => person.id !== returnedPerson.id).concat(returnedPerson))\n          createNotification({ message: `Updated ${newPerson.name}.`, error: false })\n        }).catch(error => {\n          // setPersons(persons.filter(person => person.name !== newPerson.name))\n          createNotification({ message: `Unable to edit ${newPerson.name}.`, error: true })\n        })\n      setNewPerson({ name: '', number: '' })\n    }\n  }\n\n  const removePerson = (id) => {\n    const person = persons.filter((person) => person.id === id)[0]\n\n    if (!person)\n      createNotification({ message: `Person not found.`, error: true })\n    else {\n      if (window.confirm(`Delete '${person.name}' ?`)) {\n        personService.remove(id).catch(error => {\n          createNotification({ message: `${person.name} not found on server.`, error: true })\n        })\n        setPersons(persons.filter(person => person.id !== id))\n        createNotification({ message: `${person.name} removed.`, error: false })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Header type={2} text='Phonebook' />\n      <Notification notificationMessage={notificationMessage} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <Header type={3} text='Add a new' />\n      <PersonForm onSubmit={addPerson} value={newPerson} onChange={handleInputChange} />\n      <Header type={3} text='Numbers' />\n      <Persons persons={persons} nameFilter={filter} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}